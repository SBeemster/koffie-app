{"version":3,"sources":["webpack:///./src/app/core/services/Available-coffee.service.ts","webpack:///./src/app/core/services/order.service.ts","webpack:///./src/app/core/services/preference.service.ts","webpack:///./src/app/modules/order/choice/choice.component.html","webpack:///./src/app/modules/order/choice/choice.component.scss","webpack:///./src/app/modules/order/choice/choice.component.ts","webpack:///./src/app/modules/order/favorite/favorite.component.html","webpack:///./src/app/modules/order/favorite/favorite.component.scss","webpack:///./src/app/modules/order/favorite/favorite.component.ts","webpack:///./src/app/modules/order/order-routing.module.ts","webpack:///./src/app/modules/order/order.component.html","webpack:///./src/app/modules/order/order.component.scss","webpack:///./src/app/modules/order/order.component.ts","webpack:///./src/app/modules/order/order.module.ts","webpack:///./src/app/modules/order/overview/overview.component.html","webpack:///./src/app/modules/order/overview/overview.component.scss","webpack:///./src/app/modules/order/overview/overview.component.ts","webpack:///./src/app/modules/order/place/place.component.html","webpack:///./src/app/modules/order/place/place.component.scss","webpack:///./src/app/modules/order/place/place.component.ts"],"names":[],"mappings":"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","file":"modules-dashboard-dashboard-module~modules-order-order-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Drink } from '../classes/drink';\r\nimport { Observable } from 'rxjs';\r\nimport { map, concatAll } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AvailableCoffeeService {\r\n    response: object = { 'response': 'no response yet...' };\r\n    getCoffee(): Observable<Drink> {\r\n        return this.api.get('/drinks?available=true').pipe(\r\n            concatAll(),\r\n            map(obj => {\r\n                const drink: Drink = {\r\n                    drinkId: obj['drinkId'],\r\n                    drinkName: obj['drinkName'],\r\n                    available: obj['available'],\r\n                    imageUrl: obj['imageUrl'],\r\n                    additions: obj['additions']\r\n                };\r\n                return drink;\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    getSingleCoffee(id: string): Observable<Drink> {\r\n        return this.api.get('/drinks/' + id).pipe(\r\n\r\n            map(obj => {\r\n                const drink: Drink = {\r\n                    drinkId: obj['drinkId'],\r\n                    drinkName: obj['drinkName'],\r\n                    available: obj['available'],\r\n                    imageUrl: obj['imageUrl'],\r\n                    additions: obj['additions']\r\n                };\r\n                return drink;\r\n            })\r\n        );\r\n    }\r\n    constructor(private api: ApiService) {\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OrderLine } from '../classes/orderLine';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { ApiService } from './api.service';\r\nimport { OrderStatus } from '../classes/order-status';\r\nimport { Observable } from 'rxjs';\r\nimport { map, concatAll } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  getOrders(): Observable<OrderLine> {\r\n    return this.api.get('/orderlines?orderstatus=ordered').pipe(\r\n        concatAll(),\r\n        map(obj => {\r\n            const orderline: OrderLine = {\r\n              orderLineId: obj['orderLineId'],\r\n                drink: obj['drink'],\r\n                count: obj['count'],\r\n                customer: obj['customer'],\r\n                milk: obj['milk'],\r\n                sugar: obj['sugar'],\r\n                orderStatus: obj['orderStatus']\r\n            };\r\n            return orderline;\r\n\r\n        })\r\n    );\r\n  }\r\n  getStatussen(): Observable<OrderStatus> {\r\n    return this.api.get('/orderstatus').pipe(\r\n      concatAll(),\r\n      map(obj => {\r\n          const orderstatus: OrderStatus = {\r\n            orderStatusId: obj['orderStatusId'],\r\n            statusName: obj['statusName']\r\n          };\r\n          return orderstatus;\r\n      })\r\n  );\r\n  }\r\n  postOrderline(orderline): Observable<Object> {\r\n   return this.api.post('/OrderLines', {\r\n      'Customer': {\r\n        userId: this.auth.getDecodedToken().nameid\r\n      },\r\n      'Drink': orderline.drink,\r\n      'Count': orderline.count,\r\n      'Sugar': orderline.sugar,\r\n      'Milk': orderline.milk,\r\n      'OrderTime': new Date()\r\n    });\r\n  }\r\n  putOrderline(orderline): Observable<Object> {\r\n  return this.api.put('/OrderLines/' + orderline.orderLineId, {\r\n    'OrderLineId': orderline.orderLineId,\r\n    'Customer': {\r\n      'userId': orderline.customer.userId\r\n    },\r\n    'Server': {\r\n      'userId': orderline.server.userId\r\n    },\r\n    'Drink': {\r\n      'drinkId': orderline.drink.drinkId,\r\n      'drinkName': orderline.drink.drinkName\r\n    },\r\n    'Count': orderline.count,\r\n    'Sugar': orderline.sugar,\r\n    'Milk': orderline.milk,\r\n    'GetTime': new Date(),\r\n    'OrderStatus': {\r\n      'orderStatusId': orderline.orderStatus.orderStatusId,\r\n      'statusName': orderline.orderStatus.statusName\r\n    }\r\n  });\r\n  }\r\n\r\n  constructor(private auth: AuthService, private api: ApiService) {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { concatAll, map } from 'rxjs/operators';\r\nimport { DrinkPreference } from '../classes/drink-preference';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreferenceService {\r\n\r\n  putPreference(availableCoffee, milkcnt, sugarcnt): Observable<DrinkPreference> {\r\n    return this.api.put('/drinkpreferences/byuserid/' + this.auth.getDecodedToken().nameid , {\r\n      'User': {\r\n        'userId' : this.auth.getDecodedToken().nameid\r\n      },\r\n      'Drink': availableCoffee,\r\n      'Milk': milkcnt,\r\n      'Sugar': sugarcnt }).pipe(map(obj => {\r\n        const drinkpreference: DrinkPreference = {\r\n          preferenceId: obj['preferenceId'],\r\n          user: obj['user'],\r\n          drink: obj['drink'],\r\n          milk: obj['milk'],\r\n          sugar: obj['sugar']\r\n        };\r\n        return drinkpreference;\r\n      }));\r\n}\r\n\r\n  getPreference(): Observable<DrinkPreference> {\r\n    return this.api.get('/drinkpreferences/byuserid/' + this.auth.getDecodedToken().nameid).pipe(map(obj => {\r\n      const drinkpreference: DrinkPreference = {\r\n        preferenceId: obj['preferenceId'],\r\n        user: obj['user'],\r\n        drink: obj['drink'],\r\n        milk: obj['milk'],\r\n        sugar: obj['sugar']\r\n      };\r\n      return drinkpreference;\r\n    }));\r\n  }\r\n  constructor(private api: ApiService, private auth: AuthService) { }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-5 mx-auto\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close close-star float-left\\\" (click)=\\\"submitPreference(availableCoffee, milkcnt, sugarcnt)\\\"\\r\\n                        *ngIf=\\\"userPreference.drink == null || userPreference.drink.drinkId != availableCoffee.drinkId\\\">\\r\\n                        <i class=\\\"fa fa-star-o fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"close close-star float-left\\\" (click)=\\\"emptyPreference()\\\" *ngIf=\\\"userPreference.drink != null && userPreference.drink.drinkId == availableCoffee.drinkId\\\">\\r\\n                        <i class=\\\"fa fa-star fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"close close-times\\\" aria-label=\\\"Close\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n                        <i class=\\\"fa fa-times fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <img class=\\\"card-img-top mx-auto\\\" src=\\\"{{availableCoffee.imageUrl}}\\\" alt=\\\"Card image cap\\\" />\\r\\n\\r\\n            \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-12 mb-3\\\">\\r\\n                        <h3 class=\\\"card-title text-center\\\">{{ availableCoffee.drinkName }}</h3>\\r\\n                        <div class=\\\"card-text text-center\\\">Een overheerlijk bakje {{ availableCoffee.drinkName }}!</div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-3 col-form-label\\\">Aantal</label>\\r\\n                                <div class=\\\"col-sm-9 input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"drinkCountDown()\\\">\\r\\n                                            -\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control text-center\\\" value=\\\"{{ newAantal }}\\\">\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"drinkCountUp()\\\">\\r\\n                                            +\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\" *ngIf=\\\"availableCoffee.additions\\\">\\r\\n                                <label class=\\\"col-sm-3 col-form-label\\\">Melk</label>\\r\\n                                <div class=\\\"col-sm-9 input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"milkCountDown()\\\">\\r\\n                                            -\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control text-center\\\" value=\\\"{{ milkcnt }}\\\">\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"milkCountUp()\\\">\\r\\n                                            +\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group row\\\" *ngIf=\\\"availableCoffee.additions\\\">\\r\\n                                <label class=\\\"col-sm-3 col-form-label\\\">Suiker</label>\\r\\n                                <div class=\\\"col-sm-9 input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sugarCountDown()\\\">\\r\\n                                            -\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control text-center\\\" value=\\\"{{ sugarcnt }}\\\">\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sugarCountUp()\\\">\\r\\n                                            +\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group mb-0\\\">\\r\\n                                <button class=\\\"btn btn-success btn-lg btn-block btn-bestellen\\\" (click)=\\\"addToOrder(availableCoffee, newAantal, milkcnt, sugarcnt);\\\">\\r\\n                                    Bestellen!\\r\\n                                </button>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".card {\\n  width: auto;\\n  max-width: 50rem;\\n  margin: auto;\\n  border: 0; }\\n\\n.card-body {\\n  text-align: center; }\\n\\nimg {\\n  max-height: 15em;\\n  max-width: 15em; }\\n\\n.fa-star-o,\\n.fa-star {\\n  color: #FFC107; }\\n\\n.fa-time {\\n  color: #000;\\n  text-decoration: none;\\n  opacity: .75; }\\n\\n.close-star {\\n  margin-left: 15px;\\n  margin-top: 12px;\\n  opacity: 1; }\\n\\n.close-times {\\n  margin-right: 15px;\\n  margin-top: 12px; }\\n\\n@media (max-width: 767px) {\\n  .card-body {\\n    min-width: 20em; }\\n  .card-body img {\\n    width: 80%;\\n    left: 0;\\n    top: 0; }\\n  .card .input-group {\\n    max-width: 100%; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AvailableCoffeeService } from '../../../core/services/Available-coffee.service';\r\nimport { OrderService } from '../../../core/services/order.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Drink } from '../../../core/classes/drink';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { OrderLine } from 'src/app/core/classes/orderLine';\r\nimport { PreferenceService } from '../../../core/services/preference.service';\r\nimport { DrinkPreference } from 'src/app/core/classes/drink-preference';\r\n\r\n@Component({\r\n    selector: 'app-choice',\r\n    templateUrl: './choice.component.html',\r\n    styleUrls: ['./choice.component.scss']\r\n})\r\nexport class ChoiceComponent implements OnInit {\r\n    milkcnt = 0;\r\n    sugarcnt = 0;\r\n    newAantal = 1;\r\n    availableCoffee: Drink = {\r\n        drinkId: '',\r\n        drinkName: '',\r\n        available: null,\r\n        additions: null,\r\n        imageUrl: ''\r\n    };\r\n    id = '';\r\n    userPreference: DrinkPreference = {\r\n        preferenceId: '',\r\n        drink: {\r\n            drinkId: '',\r\n            drinkName: '',\r\n            available: null,\r\n            additions: null,\r\n            imageUrl: ''\r\n        },\r\n        user: null,\r\n        milk: null,\r\n        sugar: null\r\n    };\r\n\r\n    constructor(\r\n        private availableCoffeeService: AvailableCoffeeService,\r\n        private preferenceService: PreferenceService,\r\n        private orderService: OrderService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private auth: AuthService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const id = this.activatedRoute.snapshot.params['coffeeId'];\r\n        this.availableCoffeeService.getSingleCoffee(id).subscribe(\r\n            drink => {\r\n                this.availableCoffee = drink;\r\n            },\r\n            console.error\r\n        );\r\n        this.preferenceService.getPreference().subscribe(\r\n            preference => {\r\n                this.userPreference = preference;\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n\r\n    addToOrder(\r\n        drink: Drink,\r\n        count: number,\r\n        milk: number,\r\n        sugar: number\r\n    ) {\r\n\r\n        const orderline: OrderLine = {\r\n            orderLineId: '',\r\n            customer: {\r\n                userId: this.auth.getDecodedToken().nameid,\r\n                firstName: '',\r\n                lastName: ''\r\n            },\r\n            drink: drink,\r\n            count: count,\r\n            milk: milk,\r\n            sugar: sugar\r\n        };\r\n        this.orderService.postOrderline(orderline).subscribe(\r\n            result => {\r\n                this.router.navigate(['/dashboard']);\r\n            },\r\n            console.error\r\n        );\r\n\r\n    }\r\n    milkCountUp() {\r\n        if (this.milkcnt < 3) { this.milkcnt++; }\r\n    }\r\n    milkCountDown() {\r\n        if (this.milkcnt >= 1) { this.milkcnt--; }\r\n    }\r\n    sugarCountUp() {\r\n        if (this.sugarcnt < 3) { this.sugarcnt++; }\r\n    }\r\n    sugarCountDown() {\r\n        if (this.sugarcnt >= 1) { this.sugarcnt--; }\r\n    }\r\n    drinkCountUp() {\r\n        this.newAantal++;\r\n    }\r\n    drinkCountDown() {\r\n        if (this.newAantal > 1) { this.newAantal--; }\r\n    }\r\n    submitPreference(availableCoffee, milkcnt, sugarcnt) {\r\n        this.preferenceService.putPreference(availableCoffee, milkcnt, sugarcnt).subscribe(\r\n            preference => {\r\n                this.userPreference = preference;\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n    emptyPreference() {\r\n        this.preferenceService.putPreference(null, null, null).subscribe(\r\n            preference => {\r\n                this.userPreference = preference;\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"userPreference.drink != null\\\">\\r\\n    <div class=\\\"col-12 mb-8\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"emptyPreference()\\\">\\r\\n            <i class=\\\"fa fa-star fa-lg\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n                <h4 class=\\\"text-center\\\">Uw favoriete drank!</h4>\\r\\n            </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n        <img class=\\\"m-auto\\\" src=\\\"{{ userPreference.drink.imageUrl }}\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-6 drink-right\\\">\\r\\n            \\r\\n            <div class=\\\"col-12\\\">\\r\\n                <p class=\\\"text-center\\\">\\r\\n                    Bestel met één druk op de knop uw {{ userPreference.drink.drinkName }}!\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"form-group row\\\" *ngIf=\\\"userPreference.drink.additions\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <label class=\\\"col-sm-5 col-form-label\\\">Melk</label>\\r\\n                            <div class=\\\"col-sm-8 input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"milkCountDown()\\\">\\r\\n                                        -\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control text-center\\\" value=\\\"{{ milkcnt }}\\\" min=\\\"0\\\" max=\\\"3\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"milkCountUp()\\\">\\r\\n                                        +\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\" *ngIf=\\\"userPreference.drink.additions\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <label class=\\\"col-sm-5 col-form-label\\\">Suiker</label>\\r\\n                            <div class=\\\"col-sm-8 input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sugarCountDown()\\\">\\r\\n                                        -\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control text-center\\\" value=\\\"{{ sugarcnt }}\\\" min=\\\"0\\\"\\r\\n                                    max=\\\"3\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sugarCountUp()\\\">\\r\\n                                        +\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-block btn-success btn-lg btn-order\\\" (click)=\\\"addToOrder(userPreference.drink, milkcnt, sugarcnt)\\\">\\r\\n                            Bestellen!\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".fa {\\n  color: #FFC107; }\\n\\nimg {\\n  position: relative;\\n  top: 35px;\\n  max-height: 12em;\\n  max-width: 12em; }\\n\\n.close {\\n  position: absolute;\\n  top: 0;\\n  left: 15px;\\n  z-index: 100;\\n  opacity: 1; }\\n\\n.drink-right .btn-order {\\n  position: relative;\\n  left: -2.2em; }\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { DrinkPreference } from 'src/app/core/classes/drink-preference';\r\nimport { PreferenceService } from 'src/app/core/services/preference.service';\r\nimport { Drink } from 'src/app/core/classes/drink';\r\nimport { OrderLine } from 'src/app/core/classes/orderLine';\r\nimport { OrderService } from 'src/app/core/services/order.service';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-favorite',\r\n    templateUrl: './favorite.component.html',\r\n    styleUrls: ['./favorite.component.scss']\r\n})\r\nexport class FavoriteComponent implements OnInit {\r\n    @Output() notifyFavorite: EventEmitter<DrinkPreference> = new EventEmitter<DrinkPreference>();\r\n    @Output() notifyPlaced: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    milkcnt = 0;\r\n    sugarcnt = 0;\r\n    userPreference: DrinkPreference = {\r\n        preferenceId: '',\r\n        drink: {\r\n            drinkId: '',\r\n            drinkName: '',\r\n            available: null,\r\n            additions: null,\r\n            imageUrl: ''\r\n        },\r\n        user: null,\r\n        milk: null,\r\n        sugar: null\r\n    };\r\n\r\n    constructor(\r\n        private preferenceService: PreferenceService,\r\n        private orderService: OrderService,\r\n        private auth: AuthService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.preferenceService.getPreference().subscribe(\r\n            userPreference => {\r\n                this.userPreference = userPreference;\r\n                this.milkcnt = userPreference.milk;\r\n                this.sugarcnt = userPreference.sugar;\r\n            },\r\n            console.error,\r\n            () => {\r\n                this.notifyFavorite.emit(this.userPreference);\r\n            }\r\n        );\r\n    }\r\n\r\n    addToOrder(drink: Drink, milk: number, sugar: number) {\r\n        const orderline: OrderLine = {\r\n            orderLineId: '',\r\n            customer: {\r\n                userId: this.auth.getDecodedToken().nameid,\r\n                firstName: '',\r\n                lastName: ''\r\n            },\r\n            drink: drink,\r\n            count: 1,\r\n            milk: milk,\r\n            sugar: sugar\r\n        };\r\n        this.orderService.postOrderline(orderline).subscribe(\r\n            () => {\r\n                this.notifyPlaced.emit();\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n\r\n    milkCountUp() {\r\n        if (this.milkcnt < 3) {\r\n            this.milkcnt++;\r\n            this.submitPreference();\r\n        }\r\n    }\r\n\r\n    milkCountDown() {\r\n        if (this.milkcnt >= 1) {\r\n            this.milkcnt--;\r\n            this.submitPreference();\r\n        }\r\n    }\r\n\r\n    sugarCountUp() {\r\n        if (this.sugarcnt < 3) {\r\n            this.sugarcnt++;\r\n            this.submitPreference();\r\n        }\r\n    }\r\n\r\n    sugarCountDown() {\r\n        if (this.sugarcnt >= 1) {\r\n            this.sugarcnt--;\r\n            this.submitPreference();\r\n        }\r\n    }\r\n\r\n    submitPreference() {\r\n        this.preferenceService.putPreference(this.userPreference.drink, this.milkcnt, this.sugarcnt).subscribe(\r\n            preference => {\r\n                this.userPreference = preference;\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n\r\n    emptyPreference() {\r\n        this.preferenceService.putPreference(null, null, null).subscribe(\r\n            preference => {\r\n                this.userPreference = preference;\r\n            },\r\n            console.error,\r\n            () => {\r\n                this.notifyFavorite.emit(this.userPreference);\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { OrderComponent } from './order.component';\r\nimport { PlaceComponent } from './place/place.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { ChoiceComponent } from './choice/choice.component';\r\nimport { FavoriteComponent } from './favorite/favorite.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderComponent,\r\n    children: [\r\n      { path: 'coffees/:coffeeId', component: ChoiceComponent },\r\n      { path: 'coffees', component: PlaceComponent },\r\n      { path: 'overview', component: OverviewComponent },\r\n      { path: 'favorite', component: FavoriteComponent },\r\n      { path: '', redirectTo: 'coffees', pathMatch: 'full' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule {}\r\n\r\nexport const routedComponents = [\r\n  OrderComponent,\r\n  PlaceComponent,\r\n  OverviewComponent,\r\n  ChoiceComponent,\r\n  FavoriteComponent\r\n];\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrderRoutingModule, routedComponents } from './/order-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OrderRoutingModule, FormsModule],\r\n  declarations: [...routedComponents],\r\n  exports: [...routedComponents]\r\n})\r\nexport class OrderModule {}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 mb-3\\\">\\r\\n        <ul class=\\\"list-group shadow bg-white rounded\\\">\\r\\n            <li class=\\\"list-group-item d-flex justify-content-between\\\" *ngFor=\\\"let order of orderlines\\\">\\r\\n                <div class=\\\"row d-inline-flex w-100\\\">\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                        {{ order.count }} x {{ order.drink.drinkName }}\\r\\n                        <span class=\\\"float-right\\\">{{ order.customer.firstName }} {{ order.customer.lastName }}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12\\\" *ngIf=\\\"order.server\\\">\\r\\n                        <small class=\\\"text-muted\\\">\\r\\n                            <span *ngIf=\\\"order.milk > 0\\\">Melk: {{ order.milk }}</span>\\r\\n                            <span *ngIf=\\\"order.milk > 0 && order.sugar > 0\\\"> & </span>\\r\\n                            <span *ngIf=\\\"order.sugar > 0\\\">Suiker: {{ order.sugar }}</span>\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"showButton\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"gaHalen()\\\">Ik ga deze bestelling halen!</button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { OrderService } from '../../../core/services/order.service';\r\nimport { AvailableCoffeeService } from '../../../core/services/Available-coffee.service';\r\nimport { User } from '../../../core/classes/user';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { OrderLine } from 'src/app/core/classes/orderLine';\r\nimport { Drink } from 'src/app/core/classes/drink';\r\nimport { OrderStatus } from 'src/app/core/classes/order-status';\r\n\r\n@Component({\r\n    selector: 'app-overview',\r\n    templateUrl: './overview.component.html',\r\n    styleUrls: ['./overview.component.scss']\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n    @Output() notify: EventEmitter<OrderLine[]> = new EventEmitter<OrderLine[]>();\r\n\r\n    orderlines: OrderLine[] = [];\r\n    availableCoffees: Drink[] = [];\r\n    orderStatussen: OrderStatus[] = [];\r\n    orderSnapshot: OrderLine[] = [];\r\n\r\n    showButton = false;\r\n\r\n    constructor(\r\n        private orderService: OrderService,\r\n        private availableCoffeeService: AvailableCoffeeService,\r\n        private auth: AuthService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const getCoffee = this.availableCoffeeService.getCoffee();\r\n        const getOrders = this.orderService.getOrders();\r\n        const getStatus = this.orderService.getStatussen();\r\n\r\n        getCoffee.subscribe(drink => {\r\n            this.availableCoffees.push(drink);\r\n        }, console.error);\r\n\r\n        getOrders.subscribe(orderline => {\r\n            this.orderlines.push(orderline);\r\n            this.showButton = true;\r\n        }, console.error, () => {\r\n            this.notify.emit(this.orderlines);\r\n        });\r\n\r\n        getStatus.subscribe(orderstatus => {\r\n            this.orderStatussen.push(orderstatus);\r\n        }, console.error);\r\n    }\r\n\r\n    refreshOrders(): void {\r\n        this.orderlines = [];\r\n        const getOrders = this.orderService.getOrders();\r\n        getOrders.subscribe(orderline => {\r\n            this.orderlines.push(orderline);\r\n            this.showButton = true;\r\n        }, console.error, () => {\r\n            this.notify.emit(this.orderlines);\r\n        });\r\n    }\r\n\r\n    gaHalen(): void {\r\n        for (const orderline of this.orderlines) {\r\n            if (orderline.orderStatus.statusName.toLowerCase() === 'ordered') {\r\n                orderline.halen = true;\r\n                const me: User = {\r\n                    userId: this.auth.getDecodedToken().nameid,\r\n                    firstName: '',\r\n                    lastName: ''\r\n                };\r\n                orderline.server = me;\r\n                orderline.orderStatus = this.orderStatussen.find(status => status.statusName.toString().toLowerCase() === 'finished');\r\n\r\n                this.orderService.putOrderline(orderline).subscribe(\r\n                    null,\r\n                    console.error\r\n                );\r\n            }\r\n        }\r\n        this.showButton = false;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 mb-4\\\" *ngFor=\\\"let availableCoffee of availableCoffees\\\">\\r\\n        <a [routerLink]=\\\"[ '/order/coffees/', availableCoffee.drinkId ]\\\">\\r\\n            <div class=\\\"card row-overzicht shadow bg-white rounded\\\">\\r\\n                <img class=\\\"card-img-top mx-auto\\\" src=\\\"{{ availableCoffee.imageUrl }}\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title text-center\\\">{{ availableCoffee.drinkName }}</h4>\\r\\n                </div>\\r\\n            </div>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"img {\\n  max-height: 15em;\\n  max-width: 15em; }\\n\\n.row {\\n  margin-bottom: -24px; }\\n\\n.card-body {\\n  border: 0 !important; }\\n\\n@media (max-width: 991px) {\\n  .card-body h4 {\\n    left: 0; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AvailableCoffeeService } from '../../../core/services/Available-coffee.service';\r\n\r\n@Component({\r\n    selector: 'app-place',\r\n    templateUrl: './place.component.html',\r\n    styleUrls: ['./place.component.scss']\r\n})\r\nexport class PlaceComponent implements OnInit {\r\n    availableCoffees = [];\r\n    constructor(\r\n        private availableCoffeeService: AvailableCoffeeService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.availableCoffeeService.getCoffee().subscribe(\r\n            drink => {\r\n                this.availableCoffees.push(drink);\r\n            },\r\n            console.error,\r\n            () => {\r\n                this.availableCoffees = this.availableCoffees.sort((a, b) => {\r\n                    if (a.drinkName.toLowerCase() > b.drinkName.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    if (b.drinkName.toLowerCase() > a.drinkName.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}