{"version":3,"sources":["webpack:///./src/app/core/services/user.service.ts","webpack:///./src/app/modules/user/create/create.component.html","webpack:///./src/app/modules/user/create/create.component.scss","webpack:///./src/app/modules/user/create/create.component.ts","webpack:///./src/app/modules/user/edit/edit.component.html","webpack:///./src/app/modules/user/edit/edit.component.scss","webpack:///./src/app/modules/user/edit/edit.component.ts","webpack:///./src/app/modules/user/group/group.component.html","webpack:///./src/app/modules/user/group/group.component.scss","webpack:///./src/app/modules/user/group/group.component.ts","webpack:///./src/app/modules/user/select/select.component.html","webpack:///./src/app/modules/user/select/select.component.scss","webpack:///./src/app/modules/user/select/select.component.ts","webpack:///./src/app/modules/user/user-routing.module.ts","webpack:///./src/app/modules/user/user.component.html","webpack:///./src/app/modules/user/user.component.scss","webpack:///./src/app/modules/user/user.component.ts","webpack:///./src/app/modules/user/user.module.ts"],"names":[],"mappings":"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","file":"modules-dashboard-dashboard-module~modules-user-user-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, concatAll } from 'rxjs/operators';\r\nimport { User } from '../classes/user';\r\nimport { Role } from '../classes/role';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  getAll(): Observable<User> {\r\n    return this.api.get('/users/').pipe(\r\n      concatAll(),\r\n      map(obj => {\r\n        const user: User = {\r\n          userId: obj['userId'],\r\n          firstName: obj['firstName'],\r\n          lastName: obj['lastName'],\r\n          active: obj['active']\r\n        };\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n  getSingleUser(id): Observable<User> {\r\n    return this.api.get('/users/' + id).pipe(\r\n      concatAll(),\r\n      map(obj => {\r\n        const user: User = {\r\n          userId: obj['userId'],\r\n          firstName: obj['firstName'],\r\n          lastName: obj['lastName'],\r\n          userroles: obj['userRoles'],\r\n          active: obj['active']\r\n        };\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n  saveUser(userName, password, roles, firstName, lastName): Observable<Object> {\r\n    return this.api.post('/users', {\r\n      'UserName': userName,\r\n      'Password': password,\r\n      'UserRoles': roles,\r\n      'FirstName': firstName,\r\n      'LastName': lastName\r\n    });\r\n  }\r\n  editUser(user): Observable<Object> {\r\n    return this.api.put('/users/' + user.userId, {\r\n      active: user['active'],\r\n      firstName: user['firstName'],\r\n      lastName: user['lastName'],\r\n      userId: user['userId'],\r\n      UserRoles: user.userroles,\r\n    });\r\n  }\r\n  constructor(private api: ApiService) { }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"card mx-auto mt-4\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            Nieuwe Gebruiker\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form (keydown.enter)=\\\"createUser()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Gebruikersnaam</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"userName\\\" autocomplete=\\\"username\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Wachtwoord</label>\\r\\n                    <input type=\\\"{{ passType }}\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\"\\r\\n                        autocomplete=\\\"current-password\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"button\\\" (mousedown)=\\\"togglePassword()\\\" (mouseup)=\\\"togglePassword()\\\" tabindex=\\\"-1\\\" class=\\\"btn btn-block btn-outline-secondary\\\">Show\\r\\n                    Password</button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Rol</label><br />\\r\\n                    \\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolAdmin\\\" [(ngModel)]=\\\"rolAdmin\\\">Admin<br />\\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolManager\\\" [(ngModel)]=\\\"rolManager\\\">Manager<br />\\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolUSer\\\" [(ngModel)]=\\\"rolUser\\\">User<br />\\r\\n                </div>\\r\\n                <hr>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Voornaam</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"firstName\\\" autocomplete=\\\"given-name\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Achternaam</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"lastName\\\" autocomplete=\\\"family-name\\\">\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" (click)=\\\"createUser()\\\" class=\\\"btn btn-block btn-success\\\">Toevoegen</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".card {\\n  width: 20rem; }\\n\"","import { Component } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\n\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html',\r\n    styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent {\r\n\r\n    passType = 'password';\r\n\r\n    userName: string;\r\n    password: string;\r\n    rol = 'User';\r\n\r\n    rolAdmin = false;\r\n    rolManager = false;\r\n    rolUser = true;\r\n\r\n    firstName: string;\r\n    lastName: string;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) { }\r\n\r\n\r\n\r\n    togglePassword(): void {\r\n        if (this.passType === 'password') {\r\n            this.passType = 'text';\r\n        } else {\r\n            this.passType = 'password';\r\n        }\r\n    }\r\n\r\n    createUser(): void {\r\n        const roles = [];\r\n        if (this.rolAdmin) {\r\n            roles.push({Role:\r\n                            {\r\n                                roleName: 'Admin'\r\n                            }\r\n                        });\r\n        }\r\n        if (this.rolManager) {\r\n            roles.push({Role:\r\n                {\r\n                    roleName: 'Manager'\r\n                }\r\n            });\r\n        }\r\n        if (this.rolUser) {\r\n            roles.push({Role:\r\n                {\r\n                    roleName: 'User'\r\n                }\r\n            });\r\n        }\r\n        this.userService.saveUser(\r\n            this.userName,\r\n            this.password,\r\n            roles,\r\n            this.firstName,\r\n            this.lastName\r\n        ).subscribe(\r\n            result => {\r\n                this.router.navigateByUrl('/dashboard');\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"card mx-auto mt-4\\\" *ngIf=\\\"userLoaded\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            Nieuwe Gebruiker\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form (keydown.enter)=\\\"saveUser()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Gebruikers ID</label>\\r\\n                    <p>{{ user.userId }}</p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Voornaam</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" autocomplete=\\\"given-name\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Achternaam</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" autocomplete=\\\"family-name\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Rol</label><br />\\r\\n                    \\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolAdmin\\\" [(ngModel)]=\\\"rolAdmin\\\">Admin<br />\\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolManager\\\" [(ngModel)]=\\\"rolManager\\\">Manager<br />\\r\\n                      <input type=\\\"checkbox\\\" name=\\\"rolUser\\\" [(ngModel)]=\\\"rolUser\\\">User<br />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Actief</label>\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" name=\\\"active\\\" [(ngModel)]=\\\"user.active\\\">\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" (click)=\\\"saveUser()\\\" class=\\\"btn btn-block btn-success\\\">Opslaan</button>\\r\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"btn btn-block btn-danger\\\">Cancel</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\nimport { User } from 'src/app/core/classes/user';\r\nimport { Role } from 'src/app/core/classes/role';\r\nimport { UserRoles } from 'src/app/core/classes/userroles';\r\n\r\n@Component({\r\n    selector: 'app-edit',\r\n    templateUrl: './edit.component.html',\r\n    styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n\r\n    userLoaded = false;\r\n    user: User;\r\n    rolAdmin: boolean;\r\n    rolManager: boolean;\r\n    rolUser: boolean;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const userId = this.activatedRoute.snapshot.params['userId'];\r\n        if (userId) {\r\n            this.userService.getSingleUser(userId).subscribe(\r\n                user => {\r\n                    this.user = user;\r\n                    this.userLoaded = true;\r\n                },\r\n                console.error,\r\n                () => {\r\n                    if (this.user.userroles.find(userrole => userrole.role.roleName.toString().toLowerCase() === 'admin')) {\r\n                        this.rolAdmin = true;\r\n                    }\r\n                    if (this.user.userroles.find(userrole => userrole.role.roleName.toString().toLowerCase() === 'manager')) {\r\n                        this.rolManager = true;\r\n                    }\r\n                    if (this.user.userroles.find(userrole => userrole.role.roleName.toString().toLowerCase() === 'user')) {\r\n                        this.rolUser = true;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    saveUser() {\r\n        this.user.userroles = [];\r\n        if (this.rolAdmin) {\r\n            const rol: Role = {\r\n                roleName: 'Admin'\r\n            };\r\n            const userRole: UserRoles = {\r\n                role: rol\r\n            };\r\n            this.user.userroles.push(userRole);\r\n        }\r\n        if (this.rolManager) {\r\n            const rol: Role = {\r\n                roleName: 'Manager'\r\n            };\r\n            const userRole: UserRoles = {\r\n                role: rol\r\n            };\r\n            this.user.userroles.push(userRole);\r\n        }\r\n        if (this.rolUser) {\r\n            const rol: Role = {\r\n                roleName: 'User'\r\n            };\r\n            const userRole: UserRoles = {\r\n                role: rol\r\n            };\r\n            this.user.userroles.push(userRole);\r\n        }\r\n        this.userService.editUser(this.user).subscribe(\r\n            response => {\r\n                this.router.navigate(['dashboard']);\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card mt-3\\\" *ngIf=\\\"groupFound\\\">\\r\\n            <div class=\\\"card-header\\\" *ngIf=\\\"!isOwner\\\">\\r\\n                {{ group.groupName }}\\r\\n            </div>\\r\\n            <div class=\\\"card-header btn-header\\\" *ngIf=\\\"isOwner\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" [ngModel]=\\\"group.groupName\\\" name=\\\"groupname\\\"\\r\\n                            *ngIf=\\\"!edit\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newName\\\" name=\\\"groupname\\\" *ngIf=\\\"edit\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-secondary\\\" (click)=\\\"edit = true\\\" *ngIf=\\\"!edit\\\">\\r\\n                                <i class=\\\"fa fa-fw fa-edit\\\"></i>\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"renameGroup()\\\" *ngIf=\\\"edit\\\">\\r\\n                                <i class=\\\"fa fa-fw fa-save\\\"></i>\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteGroup(group)\\\">\\r\\n                                <i class=\\\"fa fa-fw fa-trash\\\"></i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n                <div class=\\\"mb-3\\\">\\r\\n                    <h5>\\r\\n                        Groepsleden\\r\\n                    </h5>\\r\\n                    <ul class=\\\"list-group shadow bg-white rounded\\\">\\r\\n                        <li class=\\\"list-group-item\\\" *ngFor=\\\"let member of group.members\\\">\\r\\n                            {{ member.firstName }} {{ member.lastName }}\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"!isOwner\\\">\\r\\n                    <form>\\r\\n                        <button class=\\\"btn btn-block btn-danger\\\" (click)=\\\"leaveGroup()\\\">\\r\\n                            Groep Verlaten\\r\\n                        </button>\\r\\n                    </form>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"isOwner\\\">\\r\\n                    <form (ngSubmit)=\\\"addUser();\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Voeg een gebruiker toe (gebruikersnaam)\\\"\\r\\n                                [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">\\r\\n                                    <i class=\\\"fa fa-fw fa-plus\\\"></i>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card mt-3\\\" *ngIf=\\\"noGroup\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <form (ngSubmit)=\\\"newGroup();\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Verzin een naam\\\" [(ngModel)]=\\\"newName\\\"\\r\\n                            name=\\\"groupname\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">\\r\\n                                <i class=\\\"fa fa-fw fa-save\\\"></i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                U bent nog geen lid van een koffie groep. <br> Verzin om te beginnen een naam voor uw koffie groep.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Bootstrap modal for messages -->\\r\\n<div #myModal class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">{{ messageHeader }}</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p>{{ messageBody }}</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">\\r\\n                    Sluiten\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".show {\\n  display: block; }\\n\\n.btn-header {\\n  line-height: 38px; }\\n\\n.btn-header input {\\n    line-height: 32px; }\\n\\n.clearfix::after {\\n  display: block;\\n  content: \\\"\\\";\\n  clear: both; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Group } from '../../../core/classes/group';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from 'src/app/core/services/group.service';\r\nimport { merge } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-group',\r\n    templateUrl: './group.component.html',\r\n    styleUrls: ['./group.component.scss']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n    @ViewChild('myModal') myModal;\r\n\r\n    messageHeader: string;\r\n    messageBody: string;\r\n\r\n    group: Group = {\r\n        groupId: '',\r\n        groupName: ''\r\n    };\r\n\r\n    noGroup = false;\r\n    groupFound = false;\r\n    isOwner = false;\r\n    edit = false;\r\n    newName = '';\r\n    username = '';\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private groupService: GroupService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.groupService.getMyGroup().subscribe(\r\n            response => {\r\n                if (response) {\r\n                    this.group = response;\r\n                    this.groupFound = true;\r\n                    this.noGroup = false;\r\n                } else {\r\n                    this.groupFound = false;\r\n                    this.noGroup = true;\r\n                }\r\n            },\r\n            console.error\r\n            ,() => {\r\n            var groupId = this.group.groupId;\r\n            if(groupId){\r\n            this.populatePage(groupId);\r\n            }else{\r\n            this.noGroup = true;\r\n            }\r\n    }\r\n        );\r\n        \r\n    }\r\n\r\n    renameGroup() {\r\n        if (this.newName.length < 3) {\r\n            this.messageHeader = 'Groepsnaam te kort';\r\n            this.messageBody = 'U heeft een groepsnaam opgeven die te kort is. Probeer een naam van minimaal 3 tekens.';\r\n            this.openModal();\r\n            return;\r\n        } else {\r\n            this.group.groupName = this.newName;\r\n            this.edit = false;\r\n            this.groupService.putGroup(this.group).subscribe(\r\n                () => {\r\n                    this.groupService.header.refreshGroup();\r\n                },\r\n                console.error\r\n            );\r\n        }\r\n    }\r\n\r\n    newGroup() {\r\n        if (this.newName.length < 3) {\r\n            this.messageHeader = 'Groepsnaam te kort';\r\n            this.messageBody = 'U heeft een groepsnaam opgeven die te kort is. Probeer een naam van minimaal 3 tekens.';\r\n            this.openModal();\r\n            return;\r\n        } else {\r\n            this.groupService.postGroup(this.newName).subscribe(\r\n                (groupId: string) => {\r\n                    this.groupService.header.refreshGroup();\r\n                    this.noGroup = false;\r\n                    this.populatePage(groupId);\r\n                },\r\n                console.error\r\n            );\r\n        }\r\n    }\r\n\r\n    deleteGroup() {\r\n        this.groupService.deleteGroup(this.group.groupId).subscribe(\r\n            () => {\r\n                this.groupService.header.refreshGroup();\r\n                this.router.navigate(['/dashboard']);\r\n            },\r\n            console.error,\r\n            () => {\r\n                this.refreshGroup();\r\n            }\r\n        );\r\n    }\r\n\r\n    leaveGroup() {\r\n        this.groupService.leaveGroup(this.group.groupId).subscribe(\r\n            () => {\r\n                this.groupService.header.refreshGroup();\r\n                this.router.navigate(['/dashboard']);\r\n            },\r\n            console.error,\r\n            () => {\r\n                this.refreshGroup();\r\n            }\r\n        );\r\n    }\r\n\r\n    addUser() {\r\n        this.groupService.addUser(this.group.groupId, this.username).subscribe(\r\n            () => {\r\n                this.populatePage(this.group.groupId);\r\n            },\r\n            (error: HttpErrorResponse) => {\r\n                if (error.status === 409) {\r\n                    this.messageHeader = 'Conflict';\r\n                    this.messageBody = 'De gebruiker die u geprobeerd heeft toe te voegen is waarschijnlijk al lid van een koffie groep.';\r\n                    this.openModal();\r\n                    return;\r\n                }\r\n                if (error.status === 404) {\r\n                    this.messageHeader = 'Niet Gevonden';\r\n                    this.messageBody = 'De gebruiker die u geprobeerd heeft toe te voegen is niet gevonden.';\r\n                    this.openModal();\r\n                    return;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    openModal() {\r\n        this.myModal.nativeElement.className = 'modal fade show';\r\n        const div = document.createElement('div');\r\n        div.className = 'modal-backdrop fade show';\r\n        document.body.appendChild(div);\r\n    }\r\n\r\n    closeModal() {\r\n        this.myModal.nativeElement.className = 'modal hide';\r\n        const divList = document.body.getElementsByClassName('modal-backdrop');\r\n        for (let i = 0; i < divList.length; i++) {\r\n            const div = divList.item(i);\r\n            div.remove();\r\n        }\r\n    }\r\n    refreshGroup() {\r\n        this.groupService.getMyGroup().subscribe(\r\n            response => {\r\n                if (response) {\r\n                    this.group = response;\r\n                    this.groupFound = true;\r\n                    this.noGroup = false;\r\n                } else {\r\n                    this.groupFound = false;\r\n                    this.noGroup = true;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    private populatePage(groupId: string) {\r\n        this.edit = false;\r\n        this.newName = '';\r\n        this.username = '';\r\n\r\n        this.groupService.getGroupById(groupId).subscribe(\r\n            response => {\r\n                this.group = response;\r\n                this.groupFound = true;\r\n                this.completeObservable();\r\n            },\r\n            console.error\r\n        );\r\n\r\n        this.groupService.getIsGroupOwner(groupId).subscribe(\r\n            response => {\r\n                this.isOwner = response;\r\n                this.completeObservable();\r\n            },\r\n            console.error\r\n        );\r\n    }\r\n\r\n    private completeObservable() {\r\n        if (this.groupFound && this.isOwner) {\r\n            this.edit = false;\r\n            this.newName = this.group.groupName;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <ul class=\\\"list-group shadow bg-white rounded\\\">\\r\\n            <li class=\\\"list-group-item d-flex justify-content-between\\\" *ngFor=\\\"let user of users\\\">\\r\\n                <a [routerLink]=\\\"['/user/edit', user.userId]\\\">\\r\\n                    {{ user.firstName }} {{ user.lastName }}\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\n\r\n@Component({\r\n    selector: 'app-select',\r\n    templateUrl: './select.component.html',\r\n    styleUrls: ['./select.component.scss']\r\n})\r\nexport class SelectComponent implements OnInit {\r\n\r\n    users: object[] = [];\r\n\r\n    constructor(\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.userService.getAll().subscribe(\r\n            user => {\r\n                this.users.push(user);\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { SelectComponent } from './select/select.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UserComponent,\r\n        children: [\r\n            { path: 'group', component: GroupComponent },\r\n            { path: 'group/:groupId', component: GroupComponent },\r\n            { path: 'create', component: CreateComponent },\r\n            { path: 'select', component: SelectComponent },\r\n            { path: 'edit/:userId', component: EditComponent },\r\n            { path: '', redirectTo: 'group', pathMatch: 'full' }\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class UserRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    UserComponent,\r\n    GroupComponent,\r\n    CreateComponent,\r\n    EditComponent,\r\n    SelectComponent\r\n];\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl: './user.component.html',\r\n    styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoutingModule, routedComponents } from './/user-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        UserRoutingModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [...routedComponents],\r\n    exports: [...routedComponents]\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":""}