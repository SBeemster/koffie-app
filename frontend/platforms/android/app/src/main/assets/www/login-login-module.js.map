{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class LoginRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    LoginComponent\r\n];\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!loggedIn()\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"card mx-auto mt-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Login\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form (keydown.enter)=\\\"login()\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" (input)=\\\"username = $event.target.value\\\"\\r\\n                                autocomplete=\\\"username\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input type=\\\"{{ passType }}\\\" class=\\\"form-control\\\" name=\\\"password\\\" (input)=\\\"password = $event.target.value\\\"\\r\\n                                autocomplete=\\\"current-password\\\">\\r\\n                        </div>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"togglePassword()\\\" class=\\\"btn btn-block btn-outline-secondary\\\">Show\\r\\n                            Password</button>\\r\\n                        <hr>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"login()\\\" class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"awaitingResponse\\\">Login</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-12\\\" *ngIf=\\\"authError\\\">\\r\\n            <div class=\\\"alert alert-danger mx-auto mt-4\\\">\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td class=\\\"icon-cell\\\">\\r\\n                            <i class=\\\"fa fa-lg fa-fw fa-exclamation-circle\\\"></i>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            De gebruikersnaam of het wachtwoord is ongeldig.\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".card {\\n  width: 20rem; }\\n\\n.alert {\\n  width: 20rem; }\\n\\n.icon-cell {\\n  padding-right: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/services/auth.service';\r\nimport { ApiService } from '../core/services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    passType = 'password';\r\n\r\n    username = '';\r\n    password = '';\r\n\r\n    logout = this.auth.logout;\r\n    returnUrl: string;\r\n\r\n    awaitingResponse = false;\r\n    authError = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private api: ApiService,\r\n        private auth: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\r\n        this.api.awaitingResponse.subscribe(\r\n            state => { this.awaitingResponse = state; }\r\n        );\r\n    }\r\n\r\n    togglePassword(): void {\r\n        if (this.passType === 'password') {\r\n            this.passType = 'text';\r\n        } else {\r\n            this.passType = 'password';\r\n        }\r\n    }\r\n\r\n    login(): void {\r\n        this.authError = false;\r\n        this.auth.login(this.username, this.password).subscribe(\r\n            () => {\r\n                this.router.navigateByUrl(this.returnUrl);\r\n            },\r\n            () => {\r\n                this.authError = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    loggedIn(): boolean {\r\n        return this.auth.isLoggedIn();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LoginRoutingModule, routedComponents } from './/login-routing.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        LoginRoutingModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [...routedComponents]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":""}